name: Conn Network Core

on:
  workflow_dispath:
    inputs:
      deploymentType:
        type: choice
        description: deploymentType
        options:
          - all
          - intHub-network
          - intHub-routeTables
          - intHub-networkSecurityGroups
          - extHub-network
          - extHub-routeTables
          - extHub-networkSecurityGroups
          - paas-privateDnsZones
          - platform-privateEndpoints
          - platform-vnetPeerings

jobs:
  Build:
    uses: example-org/example-repo/.github/workflows/job-codeBuild.workflow.yml@main
    with:
      publish_artifacts: 'yes'

  Preview:
    needs: Build
    if: success()
    runs-on: ${{ secrets.AGENT_WIN }}
    environment: PlatformPreview
    env:
      # Route Tables
      templateRtPath: './Modules/Microsoft.Network/routeTables/routeTables.deploy.json'
      templateRtParameterPath_intHub_dnsfwd: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-routeTables/platform-conn-rt-sn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-dnsfwd-01.parameters.json'
      templateRtParameterPath_intHub_gatewaysubnet: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-routeTables/platform-conn-rt-sn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-gatewaysubnet-01.parameters.json'

      # Application Security Groups
      templateAsgPath: './Modules/Microsoft.Network/applicationSecurityGroups/applicationSecurityGroups.deploy.json'
      templateAsgParameterPath_intHub_dnsfwd: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-applicationSecurityGroups/platform-conn-asg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-dnsfwd-01.parameters.json'

      # Network Security Groups
      templateNsgPath: './Modules/Microsoft.Network/networkSecurityGroups/networkSecurityGroups.deploy.json'
      templateNsgParameterPath_intHub_dnsfwd: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-networkSecurityGroups/platform-conn-nsg-sn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-dnsfwd-01.parameters.json'

      # Virtual Networks
      templateVnetPath: './Modules/Microsoft.Network/virtualNetworks/virtualNetworks.deploy.json'
      templateVnetParameterPath_intHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/platform-conn-vn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01.parameters.json'
      templateVnetParameterPath_extHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/platform-conn-vn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01.parameters.json'
      templateVnetParameterPath_plsSpoke: './Configuration/platform/${{ secrets.ENV_PREFIX }})/platform-conn-vn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-pls-01.parameters.json'

      # Virtual Network Peerings
      templateVnetPeeringPath: './Modules/Microsoft.Network/virtualNetworks/virtualNetworkPeerings.deploy.json'
      templateVnetPeeringParameterPath_intHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-virtualNetworks-virtualNetworkPeerings/platform-conn-vnp-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01.parameters.json'
      templateVnetPeeringParameterPath_extHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-virtualNetworks-virtualNetworkPeerings/platform-conn-vnp-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01.parameters.json'
      templateVnetPeeringParameterPath_plsSpoke: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-virtualNetworks-virtualNetworkPeerings/platform-conn-vnp-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-pls-01.parameters.json'

      # Private DNS Zone
      templateDnsZonePath: './Modules/Microsoft.Network/privateDnsZones/privateDnsZones.deploy.json'
      templateDnsZoneParameterPath_main: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform.parameters.json'

      ## PaaS Private DNS Zone
      templateDnsZoneParameterPath_acr: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-acr.parameters.json'
      templateDnsZoneParameterPath_aks: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-aks.parameters.json'
      templateDnsZoneParameterPath_blob: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-blob.parameters.json'
      templateDnsZoneParameterPath_eventhub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-eventhub.parameters.json'
      templateDnsZoneParameterPath_file: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-file.parameters.json'
      templateDnsZoneParameterPath_keyvault: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-keyvault.parameters.json'
      templateDnsZoneParameterPath_mysql: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-mysql.parameters.json'
      
      # Platform Private Endpoints
      templatePePath: './Modules/Microsoft.Network/privateEndpoints/privateEndpoints.deploy.json'
      templatePeParameterPath: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateEndpoints'

      # locks
      templatelockPath: './Modules/Microsoft.Authorization/locks/locks.deploy.json'
      templatelockParameterPath: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Authorization-locks'

    steps:
      # Download a Build Artifact
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: BuildArtifacts

      # Azure Login
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_MG }}
          allow-no-subscriptions: true
          enable-AzPSSession: true   
  
      # Internal Hub Route Tables
      - name: Deploy Internal Hub Route Tables
        if: ${{ github.event.inputs.deploymentType == 'intHub-routeTables' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateRtPath }} `
              -templateParametersFile "${{ env.templateRtParameterPath_intHub_dnsfwd }}","${{ env.templateRtParameterPath_intHub_gatewaysubnet }}" `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Internal Hub Application Security Groups
      - name: Deploy Internal Hub Application Security Groups
        if: ${{ github.event.inputs.deploymentType == 'intHub-networkSecurityGroups' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateAsgPath }} `
              -templateParametersFile ${{ env.templateAsgParameterPath_intHub_dnsfwd }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Internal Hub Network Security Groups
      - name: Deploy Internal Hub Network Security Groups
        if: ${{ github.event.inputs.deploymentType == 'intHub-networkSecurityGroups' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateNsgPath }} `
              -templateParametersFile ${{ env.templateNsgParameterPath_intHub_dnsfwd }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest  

      # Internal Hub Virtual Network
      - name: Deploy Internal Hub Virtual Network
        if: ${{ github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_intHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest


      # External Hub Route Tables (Empty)

      # External Hub Application Security Groups (Empty)

      # External Hub Network Security Groups (Empty)
      
      # External Hub Virtual Network
      - name: Deploy External Hub Virtual Network
        if: ${{ github.event.inputs.deploymentType == 'extHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_extHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Main Private DNS Zone
      - name: Deploy Main Private DNS Zone
        if: ${{ github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateDnsZonePath }} `
              -templateParametersFile ${{ env.templateDnsZoneParameterPath_main }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # PaaS Private DNS Zone
      - name: Deploy PaaS Private DNS Zone
        if: ${{ github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'paas-privateDnsZones' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateDnsZonePath }} `
              -templateParametersFile "${{ env.templateDnsZoneParameterPath_acr }}","${{ env.templateDnsZoneParameterPath_aks }}","${{ env.templateDnsZoneParameterPath_blob }}","${{ env.templateDnsZoneParameterPath_eventhub }}","${{ env.templateDnsZoneParameterPath_file }}","${{ env.templateDnsZoneParameterPath_keyvault }}","${{ env.templateDnsZoneParameterPath_mysql }}" `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paasdns-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Private Link Services Virtual Network
      - name: Deploy PLS Virtual Network
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' || github.event.inputs.deploymentType == 'platform-privateEndpoints' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_plsSpoke }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Private Endpoints
      - name: Deploy Platform Private Endpoints
        if: ${{ github.event.inputs.deploymentType == 'platform-privateEndpoints' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_plsSpoke }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -ParametersDiretory  `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Peerings - Internal Hub Virtual Network
      - name: Deploy Internal Hub - VNET Peerings
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPeeringPath }} `
              -templateParametersFile ${{ env.templateVnetPeeringParameterPath_intHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Peerings - External Hub Virtual Network
      - name: Deploy External Hub - VNET Peerings
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPeeringPath }} `
              -templateParametersFile ${{ env.templateVnetPeeringParameterPath_extHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add plsspoke RG locks
      - name: Add plsspoke RG locks
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' || github.event.inputs.deploymentType == 'platform-privateEndpoints' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add platform RG locks
      - name: Add platform RG locks
        if: ${{ github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add inthub RG locks
      - name: Add inthub RG locks
        if: ${{ github.event.inputs.deploymentType == 'intHub-networkSecurityGroups' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add exthub RG locks
      - name: Add exthub RG locks
        if: ${{ github.event.inputs.deploymentType == 'exthub-networkSecurityGroups' || github.event.inputs.deploymentType == 'exthub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

  ComponentsTest:
    needs: Preview
    if: success()
    runs-on: ${{ secrets.AGENT_WIN }}

    steps:
      # Download a Build Artifact
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: BuildArtifacts
          
      - name: Components Test
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/Pester/invokePester.ps1 `
              -testSubDirectory ConfigFileTests `
              -tagArray @("Microsoft.Network-applicationSecurityGroups","Microsoft.Network-networkSecurityGroups","Microsoft.Network-routeTables","Microsoft.Network-virtualNetworks","Microsoft.Network-privateDnsZones","Microsoft.Network-privateEndpoints","Microsoft.Network-virtualNetworks-virtualNetworkPeerings")
          azPSVersion: latest

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1/composite@v1
        if: always()
        with:
          files: '**/TEST-*.xml'

  NonProduction:
    needs: ComponentsTest
    if: ${{ success() && github.ref_name == 'main' }}
    runs-on: ${{ secrets.AGENT_WIN }}
    environment: PlatformNonProduction
    env:
      # Route Tables
      templateRtPath: './Modules/Microsoft.Network/routeTables/routeTables.deploy.json'
      templateRtParameterPath_intHub_dnsfwd: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-routeTables/platform-conn-rt-sn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-dnsfwd-01.parameters.json'
      templateRtParameterPath_intHub_gatewaysubnet: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-routeTables/platform-conn-rt-sn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-gatewaysubnet-01.parameters.json'

      # Application Security Groups
      templateAsgPath: './Modules/Microsoft.Network/applicationSecurityGroups/applicationSecurityGroups.deploy.json'
      templateAsgParameterPath_intHub_dnsfwd: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-applicationSecurityGroups/platform-conn-asg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-dnsfwd-01.parameters.json'

      # Network Security Groups
      templateNsgPath: './Modules/Microsoft.Network/networkSecurityGroups/networkSecurityGroups.deploy.json'
      templateNsgParameterPath_intHub_dnsfwd: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-networkSecurityGroups/platform-conn-nsg-sn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-dnsfwd-01.parameters.json'

      # Virtual Networks
      templateVnetPath: './Modules/Microsoft.Network/virtualNetworks/virtualNetworks.deploy.json'
      templateVnetParameterPath_intHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/platform-conn-vn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01.parameters.json'
      templateVnetParameterPath_extHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/platform-conn-vn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01.parameters.json'
      templateVnetParameterPath_plsSpoke: './Configuration/platform/${{ secrets.ENV_PREFIX }})/platform-conn-vn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-pls-01.parameters.json'

      # Virtual Network Peerings
      templateVnetPeeringPath: './Modules/Microsoft.Network/virtualNetworks/virtualNetworkPeerings.deploy.json'
      templateVnetPeeringParameterPath_intHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-virtualNetworks-virtualNetworkPeerings/platform-conn-vnp-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01.parameters.json'
      templateVnetPeeringParameterPath_extHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-virtualNetworks-virtualNetworkPeerings/platform-conn-vnp-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01.parameters.json'
      templateVnetPeeringParameterPath_plsSpoke: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-virtualNetworks-virtualNetworkPeerings/platform-conn-vnp-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-pls-01.parameters.json'

      # Private DNS Zone
      templateDnsZonePath: './Modules/Microsoft.Network/privateDnsZones/privateDnsZones.deploy.json'
      templateDnsZoneParameterPath_main: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform.parameters.json'

      ## PaaS Private DNS Zone
      templateDnsZoneParameterPath_acr: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-acr.parameters.json'
      templateDnsZoneParameterPath_aks: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-aks.parameters.json'
      templateDnsZoneParameterPath_blob: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-blob.parameters.json'
      templateDnsZoneParameterPath_eventhub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-eventhub.parameters.json'
      templateDnsZoneParameterPath_file: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-file.parameters.json'
      templateDnsZoneParameterPath_keyvault: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-keyvault.parameters.json'
      templateDnsZoneParameterPath_mysql: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-mysql.parameters.json'
      
      # Platform Private Endpoints
      templatePePath: './Modules/Microsoft.Network/privateEndpoints/privateEndpoints.deploy.json'
      templatePeParameterPath: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateEndpoints'

      # locks
      templatelockPath: './Modules/Microsoft.Authorization/locks/locks.deploy.json'
      templatelockParameterPath: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Authorization-locks'

    steps:
      # Download a Build Artifact
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: BuildArtifacts

      # Azure Login
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_MG }}
          allow-no-subscriptions: true
          enable-AzPSSession: true   
  
      # Internal Hub Route Tables
      - name: Deploy Internal Hub Route Tables
        if: ${{ github.event.inputs.deploymentType == 'intHub-routeTables' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateRtPath }} `
              -templateParametersFile "${{ env.templateRtParameterPath_intHub_dnsfwd }}","${{ env.templateRtParameterPath_intHub_gatewaysubnet }}" `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Internal Hub Application Security Groups
      - name: Deploy Internal Hub Application Security Groups
        if: ${{ github.event.inputs.deploymentType == 'intHub-networkSecurityGroups' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateAsgPath }} `
              -templateParametersFile ${{ env.templateAsgParameterPath_intHub_dnsfwd }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Internal Hub Network Security Groups
      - name: Deploy Internal Hub Network Security Groups
        if: ${{ github.event.inputs.deploymentType == 'intHub-networkSecurityGroups' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateNsgPath }} `
              -templateParametersFile ${{ env.templateNsgParameterPath_intHub_dnsfwd }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest  

      # Internal Hub Virtual Network
      - name: Deploy Internal Hub Virtual Network
        if: ${{ github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_intHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest


      # External Hub Route Tables (Empty)

      # External Hub Application Security Groups (Empty)

      # External Hub Network Security Groups (Empty)
      
      # External Hub Virtual Network
      - name: Deploy External Hub Virtual Network
        if: ${{ github.event.inputs.deploymentType == 'extHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_extHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Main Private DNS Zone
      - name: Deploy Main Private DNS Zone
        if: ${{ github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateDnsZonePath }} `
              -templateParametersFile ${{ env.templateDnsZoneParameterPath_main }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # PaaS Private DNS Zone
      - name: Deploy PaaS Private DNS Zone
        if: ${{ github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'paas-privateDnsZones' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateDnsZonePath }} `
              -templateParametersFile "${{ env.templateDnsZoneParameterPath_acr }}","${{ env.templateDnsZoneParameterPath_aks }}","${{ env.templateDnsZoneParameterPath_blob }}","${{ env.templateDnsZoneParameterPath_eventhub }}","${{ env.templateDnsZoneParameterPath_file }}","${{ env.templateDnsZoneParameterPath_keyvault }}","${{ env.templateDnsZoneParameterPath_mysql }}" `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paasdns-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Private Link Services Virtual Network
      - name: Deploy PLS Virtual Network
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' || github.event.inputs.deploymentType == 'platform-privateEndpoints' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_plsSpoke }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Private Endpoints
      - name: Deploy Platform Private Endpoints
        if: ${{ github.event.inputs.deploymentType == 'platform-privateEndpoints' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_plsSpoke }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              --ParametersDiretory `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Peerings - Internal Hub Virtual Network
      - name: Deploy Internal Hub - VNET Peerings
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPeeringPath }} `
              -templateParametersFile ${{ env.templateVnetPeeringParameterPath_intHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Peerings - External Hub Virtual Network
      - name: Deploy External Hub - VNET Peerings
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPeeringPath }} `
              -templateParametersFile ${{ env.templateVnetPeeringParameterPath_extHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add plsspoke RG locks
      - name: Add plsspoke RG locks
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' || github.event.inputs.deploymentType == 'platform-privateEndpoints' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add platform RG locks
      - name: Add platform RG locks
        if: ${{ github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add inthub RG locks
      - name: Add inthub RG locks
        if: ${{ github.event.inputs.deploymentType == 'intHub-networkSecurityGroups' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add exthub RG locks
      - name: Add exthub RG locks
        if: ${{ github.event.inputs.deploymentType == 'exthub-networkSecurityGroups' || github.event.inputs.deploymentType == 'exthub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

  Production:
    needs: NonProduction
    if: ${{ success() && github.ref_name == 'main' }}
    runs-on: ${{ secrets.AGENT_WIN }}
    environment: PlatformProduction
    env:
      # Route Tables
      templateRtPath: './Modules/Microsoft.Network/routeTables/routeTables.deploy.json'
      templateRtParameterPath_intHub_dnsfwd: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-routeTables/platform-conn-rt-sn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-dnsfwd-01.parameters.json'
      templateRtParameterPath_intHub_gatewaysubnet: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-routeTables/platform-conn-rt-sn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-gatewaysubnet-01.parameters.json'

      # Application Security Groups
      templateAsgPath: './Modules/Microsoft.Network/applicationSecurityGroups/applicationSecurityGroups.deploy.json'
      templateAsgParameterPath_intHub_dnsfwd: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-applicationSecurityGroups/platform-conn-asg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-dnsfwd-01.parameters.json'

      # Network Security Groups
      templateNsgPath: './Modules/Microsoft.Network/networkSecurityGroups/networkSecurityGroups.deploy.json'
      templateNsgParameterPath_intHub_dnsfwd: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-networkSecurityGroups/platform-conn-nsg-sn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-dnsfwd-01.parameters.json'

      # Virtual Networks
      templateVnetPath: './Modules/Microsoft.Network/virtualNetworks/virtualNetworks.deploy.json'
      templateVnetParameterPath_intHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/platform-conn-vn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01.parameters.json'
      templateVnetParameterPath_extHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/platform-conn-vn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01.parameters.json'
      templateVnetParameterPath_plsSpoke: './Configuration/platform/${{ secrets.ENV_PREFIX }})/platform-conn-vn-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-pls-01.parameters.json'

      # Virtual Network Peerings
      templateVnetPeeringPath: './Modules/Microsoft.Network/virtualNetworks/virtualNetworkPeerings.deploy.json'
      templateVnetPeeringParameterPath_intHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-virtualNetworks-virtualNetworkPeerings/platform-conn-vnp-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01.parameters.json'
      templateVnetPeeringParameterPath_extHub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-virtualNetworks-virtualNetworkPeerings/platform-conn-vnp-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01.parameters.json'
      templateVnetPeeringParameterPath_plsSpoke: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-virtualNetworks-virtualNetworkPeerings/platform-conn-vnp-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-pls-01.parameters.json'

      # Private DNS Zone
      templateDnsZonePath: './Modules/Microsoft.Network/privateDnsZones/privateDnsZones.deploy.json'
      templateDnsZoneParameterPath_main: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform.parameters.json'

      ## PaaS Private DNS Zone
      templateDnsZoneParameterPath_acr: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-acr.parameters.json'
      templateDnsZoneParameterPath_aks: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-aks.parameters.json'
      templateDnsZoneParameterPath_blob: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-blob.parameters.json'
      templateDnsZoneParameterPath_eventhub: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-eventhub.parameters.json'
      templateDnsZoneParameterPath_file: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-file.parameters.json'
      templateDnsZoneParameterPath_keyvault: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-keyvault.parameters.json'
      templateDnsZoneParameterPath_mysql: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateDnsZones/platform-conn-dns-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paas-mysql.parameters.json'
      
      # Platform Private Endpoints
      templatePePath: './Modules/Microsoft.Network/privateEndpoints/privateEndpoints.deploy.json'
      templatePeParameterPath: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Network-privateEndpoints'

      # locks
      templatelockPath: './Modules/Microsoft.Authorization/locks/locks.deploy.json'
      templatelockParameterPath: './Configuration/platform/${{ secrets.ENV_PREFIX }}/Microsoft.Authorization-locks'

    steps:
      # Download a Build Artifact
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: BuildArtifacts

      # Azure Login
      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_SP_MG }}
          allow-no-subscriptions: true
          enable-AzPSSession: true   
  
      # Internal Hub Route Tables
      - name: Deploy Internal Hub Route Tables
        if: ${{ github.event.inputs.deploymentType == 'intHub-routeTables' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateRtPath }} `
              -templateParametersFile "${{ env.templateRtParameterPath_intHub_dnsfwd }}","${{ env.templateRtParameterPath_intHub_gatewaysubnet }}" `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Internal Hub Application Security Groups
      - name: Deploy Internal Hub Application Security Groups
        if: ${{ github.event.inputs.deploymentType == 'intHub-networkSecurityGroups' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateAsgPath }} `
              -templateParametersFile ${{ env.templateAsgParameterPath_intHub_dnsfwd }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Internal Hub Network Security Groups
      - name: Deploy Internal Hub Network Security Groups
        if: ${{ github.event.inputs.deploymentType == 'intHub-networkSecurityGroups' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateNsgPath }} `
              -templateParametersFile ${{ env.templateNsgParameterPath_intHub_dnsfwd }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest  

      # Internal Hub Virtual Network
      - name: Deploy Internal Hub Virtual Network
        if: ${{ github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_intHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest


      # External Hub Route Tables (Empty)

      # External Hub Application Security Groups (Empty)

      # External Hub Network Security Groups (Empty)
      
      # External Hub Virtual Network
      - name: Deploy External Hub Virtual Network
        if: ${{ github.event.inputs.deploymentType == 'extHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_extHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Main Private DNS Zone
      - name: Deploy Main Private DNS Zone
        if: ${{ github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateDnsZonePath }} `
              -templateParametersFile ${{ env.templateDnsZoneParameterPath_main }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # PaaS Private DNS Zone
      - name: Deploy PaaS Private DNS Zone
        if: ${{ github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'paas-privateDnsZones' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateDnsZonePath }} `
              -templateParametersFile "${{ env.templateDnsZoneParameterPath_acr }}","${{ env.templateDnsZoneParameterPath_aks }}","${{ env.templateDnsZoneParameterPath_blob }}","${{ env.templateDnsZoneParameterPath_eventhub }}","${{ env.templateDnsZoneParameterPath_file }}","${{ env.templateDnsZoneParameterPath_keyvault }}","${{ env.templateDnsZoneParameterPath_mysql }}" `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-paasdns-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Private Link Services Virtual Network
      - name: Deploy PLS Virtual Network
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' || github.event.inputs.deploymentType == 'platform-privateEndpoints' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_plsSpoke }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Private Endpoints
      - name: Deploy Platform Private Endpoints
        if: ${{ github.event.inputs.deploymentType == 'platform-privateEndpoints' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPath }} `
              -templateParametersFile ${{ env.templateVnetParameterPath_plsSpoke }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -ParametersDiretory `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}"
          azPSVersion: latest

      # Peerings - Internal Hub Virtual Network
      - name: Deploy Internal Hub - VNET Peerings
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPeeringPath }} `
              -templateParametersFile ${{ env.templateVnetPeeringParameterPath_intHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Peerings - External Hub Virtual Network
      - name: Deploy External Hub - VNET Peerings
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templateVnetPeeringPath }} `
              -templateParametersFile ${{ env.templateVnetPeeringParameterPath_extHub }} `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add plsspoke RG locks
      - name: Add plsspoke RG locks
        if: ${{ github.event.inputs.deploymentType == 'platform-vnetPeerings' || github.event.inputs.deploymentType == 'platform-privateEndpoints' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-plsspoke-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add platform RG locks
      - name: Add platform RG locks
        if: ${{ github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-platform-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add inthub RG locks
      - name: Add inthub RG locks
        if: ${{ github.event.inputs.deploymentType == 'intHub-networkSecurityGroups' || github.event.inputs.deploymentType == 'intHub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-inthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest

      # Add exthub RG locks
      - name: Add exthub RG locks
        if: ${{ github.event.inputs.deploymentType == 'exthub-networkSecurityGroups' || github.event.inputs.deploymentType == 'exthub-network' || github.event.inputs.deploymentType == 'all' }}
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            ./Scripts/New-DeploymentV2.ps1 `
              -templateFile ${{ env.templatelockPath }} `
              -templateParametersFile ${{ env.templatelockParameterPath }}/rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01.locks.parameters.json `
              -resourceGroupName rg-${{ secrets.PRIMARY_REGION_PREFIX }}-${{ secrets.ENV_PREFIX }}-exthub-01 `
              -subscriptionId ${{ secrets.SUB_CONN_ID }} `
              -buildInfo "${{ github.sha }} ${{ github.ref_name }}" `
              -skipTags
          azPSVersion: latest
<<<<<<< HEAD:.github/workflows/conn_firewall.workflow.yml
=======
 
>>>>>>> 95a4eff58fe338213e4b9f1360ba840da2922ade:.github/workflows/conn_firewall.yml
